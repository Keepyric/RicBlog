<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zljxxj.blog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.zljxxj.blog.entity.Article">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_user_id" property="articleUserId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR"/>
        <result column="article_summary" property="articleSummary" jdbcType="VARCHAR"/>
        <result column="article_view_count" property="articleViewCount" jdbcType="INTEGER"/>
        <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER"/>
        <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER"/>
        <result column="article_is_comment" property="articleIsComment" jdbcType="INTEGER"/>
        <result column="article_order" property="articleOrder" jdbcType="INTEGER"/>
        <result column="article_create_time" property="articleCreateTime" jdbcType="TIMESTAMP"/>
        <result column="article_update_time" property="articleUpdateTime" jdbcType="TIMESTAMP"/>
        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="tb">article</sql>

    <sql id="Base_Column_List">
    article_id, article_user_id, article_title, article_content,article_summary, article_view_count, article_comment_count, article_like_count, article_create_time,
    article_update_time, article_is_comment, article_status, article_order
    </sql>

    <select id="listArticleByLimit" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        article_id, article_user_id, article_title, article_view_count, article_comment_count, article_like_count,
        article_create_time,
        article_update_time, article_is_comment, article_status, article_order
        FROM
        <include refid="tb"/>
        ORDER BY article_id DESC
        LIMIT #{value}
    </select>

    <select id="getArticleByStatusAndId" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="status != null">
                article_status = #{status} AND
            </if>
            article_id = #{id}
        </where>
    </select>

    <select id="listArticleByViewCount" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
        ORDER BY article_view_count DESC,article_order DESC, article_id DESC
        limit #{limit}

    </select>

    <!--获得下一篇的文章-->
    <select id="getAfterArticle" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            article_id > #{id} AND article_status = 1
        </where>
        ORDER BY article_id
        limit 1
    </select>
    <!--获得上一篇的文章-->
    <select id="getPreArticle" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            article_id &lt; #{id} AND article_status = 1
        </where>
        ORDER BY article_id
        limit 1
    </select>
    <!--获得随机文章-->
    <select id="listRandomArticle" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
        ORDER BY
        RAND()
        limit #{limit}
    </select>

    <!--获得评论数较多的文章列表-->
    <select id="listArticleByCommentCount" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
        ORDER BY
        article_comment_count DESC,article_order DESC, article_id DESC
        limit #{limit}
    </select>

    <select id="findArticleByCategoryId" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_is_comment, article.article_status, article.article_order,
         article.article_summary
        FROM article, article_category_ref
        WHERE
        article.article_status = 1 AND
        article.article_id = article_category_ref.article_id AND
        article_category_ref.category_id = #{catgeoyrId}
        LIMIT #{limit}
    </select>

    <select id="findArticleByCategoryIds" resultType="com.zljxxj.blog.entity.Article">
        SELECT
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_is_comment, article.article_status, article.article_order,
        article.article_summary
        FROM article, article_category_ref
        <where>
            article.article_status = 1 AND
            article.article_id = article_category_ref.article_id AND
            article_category_ref.category_id
            <if test="categoryIds != null">
                IN
                <foreach collection="categoryIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
        LIMIT #{limit}
    </select>
</mapper>
